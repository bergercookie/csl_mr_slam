<?xml version="1.0"?>

<!--
Mon Nov 21 18:06:41 EET 2016, Nikos Koukis

Wrapper for executing mrpt_graphslam_2d. Launchfile launches graphslam for a
single robot. Use the nodes/graphslam_launcher.py in case you want to launch
multiple nodes according to the shell environment variables that have been set

-->

<launch>
  <arg name="output" value="$(env MR_OUTPUT_MESSAGES_TO)"/>
	<arg name="config_file" default="$(find mrpt_graphslam_2d)/config/ros_odometry_2DRangeScans_LC_MR.ini"  />
  <!--<arg name = "config_file" value = "$(find mrpt_graphslam_2d)/config/ros_laser_odometry.ini"  />-->
  <!--<arg name = "config_file" value = "$(find mrpt_graphslam_2d)/config/ros_odometry_2DRangeScans_LC.ini"  />-->
	<arg name="do_publish_gridmap_topic" default="true" />
  <arg name="run_under_gdb" default="false" />

  <arg name="launch_dir" value="$(find csl_robots_gazebo)/launch" />
	<arg name="porcelain_dir" value="$(arg launch_dir)/porcelain" />
  <arg name="plumb_dir" value="$(arg launch_dir)/plumbing" />
  <arg name="common_dir" value="$(find csl_common)/launch" />

  <!-- Initial position of anchor frame_ID with regards to the map origin 
  		notation: X, Y, Z, YAW, PITCH, ROLL 
  		-->
  <arg name="pos_x" default="0.0" />
  <arg name="pos_y" default="0.0" />
  <arg name="pos_z" default="0.02" />
  <arg name="rot_x" default="0.0" />
  <arg name="rot_y" default="0.0" />
  <arg name="rot_z" default="0.0" />
  <arg name="map_to_anchor_tf" value="$(arg pos_x) $(arg pos_y) $(arg pos_z) $(arg rot_z) $(arg rot_y) $(arg rot_x)" />

  <!-- This is set by graphslam_launcher.py -->
  <arg name="robot_name" default="pioneer_3at" />

  <arg name="anchor_frame_ID" value="$(arg robot_name)_anchor" />
  <arg name="base_link_frame_ID" value="$(arg robot_name)_base_link"/>
  <arg name="odometry_frame_ID" value="$(arg robot_name)_odometry"/>
  <arg name="laser_frame_ID" value="$(arg robot_name)_laser"/>

  <!-- Deciders/Optimizer -->
  <arg name="NRD" default="CFixedIntervalsNRD" />
  <arg name="ERD" default="CLoopCloserERD_CM" />
  <arg name="GSO" default="CLevMarqGSO" />

  <arg name="disable_MRPT_visuals" default="false" />
  <arg name="verbosity" default="0"/>
  <arg name="is_mr_slam" default="1"/>

  <group ns="$(arg robot_name)">

	  <include file="$(find mrpt_graphslam_2d)/launch/graphslam.launch">
		  <arg name="output" value="$(arg output)" />
      <arg name= "config_file" value = "$(arg config_file)"  />
		  <arg name="anchor_frame_ID" value="$(arg anchor_frame_ID)" />
		  <arg name="base_link_frame_ID" value="$(arg base_link_frame_ID)"/>
		  <arg name="odometry_frame_ID" value="$(arg odometry_frame_ID)" />
		  <arg name="laser_frame_ID" value="$(arg laser_frame_ID)"/>
		  <arg name="verbosity" value="$(arg verbosity)"/>
		  <arg name="run_under_gdb" value="$(arg run_under_gdb)" />

		  <arg name="NRD" value="$(arg NRD)" />
		  <!--<arg name="NRD" value="CICPCriteriaNRD" />-->
      <arg name="ERD" value="$(arg ERD)" />
      <!--<arg name="ERD" value="CLoopCloserERD" />-->
		  <arg name="GSO" value="$(arg GSO)" />
      <arg name="disable_MRPT_visuals" value="$(arg disable_MRPT_visuals)" />
      <arg name="is_mr_slam" value="$(arg is_mr_slam)" />
	  </include>

	  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_robot_frame"
		  args="$(arg map_to_anchor_tf) $(env MR_GLOBAL_FRAME_ID) $(arg anchor_frame_ID)" />

  </group>

  <!-- Setup the multimaster for the specific graphSLAM agent -->
  <include file="$(arg common_dir)/setup_multimaster.launch" />

</launch>
