<?xml version="1.0"?>

<!--
Tue Nov 1 23:06:10 EET 2016, Nikos Koukis

Launchfile provides a wrapper for running mrpt_graphslam_2d in an online setup.
It is assumed that the underlying drivers (laserScanners, cameras have already
been configured and are running so that their corresponding measurements are
available (see setup_graphSLAM_agent.launch for the latter).

warning: Node launches the necessary nodes for running graphslam and
         (optionally) for computing the ground truth paths of the robots but
         *does not* launch the nodes for grabbing the sensor measurements
         (laser, odometry etc) or for controlling the robot movement (e.g.
         joystick). For this, see the setup_graphSLAM_agent.launch file.

note: This is a top-level launchfile that should be used for running graphSLAM
      on a single agent. The data is assumed to be available in the
      corresponding topics (see /input topic namespace).

note: This launchfile is to be used either in exclusive single-robot graphSLAM
      or in multi-robot graphSLAM where the current agent is to communicate
      (part of) its data with its neighbors. The only difference is the actual
      executable called by `mrpt_graphslam_2d/launch/graphslam.launch`
      launchfile and by the NRD/ERD/GSO combination issued in the current file.

-->

<launch>
	<arg name="porcelain_dir" value="$(find csl_hw_setup)/launch/porcelain" />
    <arg name="plumb_dir" value="$(find csl_hw_setup)/launch/plumbing" />
    <arg name="robot_ns" default="$(env MR_ROBOT_NS)" />
    <arg name="output" value="$(env MR_OUTPUT_MESSAGES_TO)" />
    <arg name="gt_ns" value="/ground_truth" />
    <arg name="origin_marker_ID" value="$(env MR_ORIGIN_MARKER_ID)" />
    <arg name="anchor_frame_ID" value="$(env MR_ANCHOR_FRAME_ID)" />
    <arg name="track_odd_marker_IDs" value="$(env MR_USE_ODD_ARUCO_MARKERS_FOR_GT)" />
    <arg name="disable_MRPT_visuals" value="$(env MR_DISABLE_MRPT_VISUALS)" />
	<!--<arg name="config_file" default="$(find mrpt_graphslam_2d)/config/ros_odometry_2DRangeScans_LC_MR_real.ini"  />-->
    <!--<arg name="config_file" default="$(find mrpt_graphslam_2d)/config/mr_demo_same2.ini"  />-->
    <arg name="config_file" default="$(find mrpt_graphslam_2d)/config/mr_demo_different2.ini"  />
	<arg name="base_link_frame_ID" value="$(env MR_BASE_LINK_FRAME_ID)"/>
	<arg name="odometry_frame_ID" value="$(env MR_ODOMETRY_FRAME_ID)"/>
    <!--<arg name="config_file" value="$(find mrpt_graphslam_2d)/config/ros_laser_odometry.ini"  />-->
    <!--<arg name="config_file" value="$(find mrpt_graphslam_2d)/config/ros_odometry_2DRangeScans_LC_version.ini"  />-->

    <!-- Deciders/Optimizer -->
    <arg name="NRD" default="$(env MR_NRD)" />
    <arg name="ERD" default="$(env MR_ERD)" />
    <arg name="GSO" default="$(env MR_GSO)" />

    <arg name="start_rviz" default="false" />
    <arg name="rviz_file" default="$(find mrpt_graphslam_2d)/rviz/graphslam_bag.rviz" />

    <param name="$(arg gt_ns)/origin_marker_ID" value="$(arg origin_marker_ID)" />
    <param name="$(arg gt_ns)/track_odd_marker_IDs" value="$(arg track_odd_marker_IDs)" type="bool"/>

	<group ns="$(arg robot_ns)">

		<include file="$(find mrpt_graphslam_2d)/launch/graphslam.launch">
			<arg name="output" value="$(arg output)" />
            <arg name="config_file" value="$(arg config_file)"  />
			<arg name="anchor_frame_ID" value="$(arg anchor_frame_ID)" />
			<arg name="base_link_frame_ID" value="$(arg base_link_frame_ID)" />
	        <arg name="odometry_frame_ID" value="$(arg odometry_frame_ID)"/>
			<arg name="NRD" value="$(arg NRD)" />
            <arg name="ERD" value="$(arg ERD)" />
		    <arg name="GSO" value="$(arg GSO)" />
		    <arg name="is_mr_slam" value="$(env MR_IS_MULTIROBOT_GRAPHSLAM)" />
            <arg name="disable_MRPT_visuals" value="$(arg disable_MRPT_visuals)" />
		</include>

	</group>

	<group if="$(env MR_COMPUTE_GROUND_TRUTH)">

		<!-- Get ground-truth estimation of the robot paths -->
		<include file="$(find ground_truth_fetcher)/launch/ground_truth_real.launch">
			<arg name="origin_marker_ID" value="$(env MR_ORIGIN_MARKER_ID)" />
		</include>

	</group>

    <!-- Record topics -->
    <group if="$(env MR_RECORD_TOPICS)">
        <arg name="include_topics" value="/$(arg robot_ns)/.*input.* /$(arg robot_ns)/.*image_raw.* /$(arg robot_ns)/.*cmd_vel.*" />
        <arg name="exclude_topics" value=".*compressedDepth.*" />
        <node pkg="rosbag" type="record" name="rosbag_$(arg robot_ns)" output="$(arg output)"
            args="-e $(arg include_topics) -x $(arg exclude_topics) -O records.bag" />
	</group>

	<!-- Start rviz -->
	<group if="$(arg start_rviz)">
		<node pkg="rviz" type="rviz" name="rviz_visualization" output="$(arg output)" args="-d $(arg rviz_file)" />
	</group>


</launch>
